syntax = "proto3";

package chat;

// The Chat service definition
service Chat {
    // Register with (username, password, confirm_password)
    rpc Register (RegisterRequest) returns (Response);

    // Login with (username, password)
    rpc Login (LoginRequest) returns (Response);

    // Send a direct message from one user to another
    rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);

    // Check messages (server-streaming):
    // The server can yield multiple CheckMessagesResponse messages
    rpc CheckMessages (CheckMessagesRequest) returns (stream CheckMessagesResponse);

    // Log off a user
    rpc Logoff (LogoffRequest) returns (Response);

    // Search for users
    rpc SearchUsers (SearchRequest) returns (SearchResponse);

    // Delete last unread message the user has sent
    rpc DeleteLastMessage (DeleteRequest) returns (Response);

    // Deactivate an account
    rpc DeactivateAccount (DeactivateRequest) returns (Response);
}

/* ===========
   Message Types
   =========== */

// Registration
message RegisterRequest {
    string username = 1;
    string password = 2;
    string confirm_password = 3;
}

// Login
message LoginRequest {
    string username = 1;
    string password = 2;
}

// Send a DM
message SendMessageRequest {
    string sender = 1;
    string recipient = 2;
    string message_body = 3;
}

message SendMessageResponse {
    bool success = 1;
    string server_message = 2;
}

// Check messages (server-streaming)
message CheckMessagesRequest {
    string username = 1;
    string choice = 2;  // e.g., "1" to read, "2" to skip
    string sender = 3;  // which sender we want to read from
}

message CheckMessagesResponse {
    string command = 1;         // optional (e.g. "checkmessages")
    string server_message = 2;  // e.g. "You have N unread messages"
    string sender = 3;          // who sent the message
    string message_body = 4;    // actual text
    repeated string messages = 5; // optional array if you want to return multiple lines at once
}

// Logoff
message LogoffRequest {
    string username = 1;
}

// Search
message SearchRequest {
    string username = 1;
}

message SearchResponse {
    bool success = 1;
    repeated string usernames = 2;
    string server_message = 3;
}

// Delete last unread
message DeleteRequest {
    string username = 1;
    string confirmation = 2; // "yes"/"no"
}

// Deactivate
message DeactivateRequest {
    string username = 1;
    string confirmation = 2; // "yes"/"no"
}

// Generic response for some calls
message Response {
    string command = 1;
    string server_message = 2;
}